<div class="component matches mt-0" id="matches">
  <div class="header">
    <div class="round">
      <div><img src="/images/lamp.svg" alt="lamp" /></div>
    </div>
    <div class="title">
      Предстоящие матчи
    </div>
    <div class="controll">
      <span v-text="getDateItems"></span>
      <label @click="prevItems">
        <img src="/images/arrowLft.svg" alt="arrow left" />
      </label>
      <label @click="nextItems" >
        <img src="/images/arrowRgt.svg" alt="arrow right" />
      </label>
    </div>
  </div>
  <div class="table">
    <div class="table-row" v-for="(item, i) in getItems" :class="[item.time === null ? 'matches-row' : '']">
      <a :href="`/ru/matches/${item.match_id}`" class="table-row border-0 text-dark pointer" @click="setView(i, $event)">
        <match :match="item" v-if="checkEmptyTeam(item)"></match>
        <empty-match :match="item" v-else></empty-match>
      </a>
      <div class="video" v-show="item.video !== null" :style="{height: index === i ? height : '0'}" >
        <div class="rows-d rowsvid">
          <div class="row-d">
            <img src="/images/temp/Video1.svg" alt="Video1" />
          </div>
          <div class="row-d">
            
          </div>
          <div class="row-d">
            <label>
              <a :href="'/ru/matches/' + item.match_id" v-text="item.time === null ? 'Страница матча' : 'Результаты матча'"></a>
              <img src="/images/arrowRightOrange.svg" alt="arrow right" />
            </label>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<script type="text/x-template" id="match-template">
  <div class="rows">
    <div>
      <label v-if="match.time !== null" v-text="match.time"></label>
      <span v-if="match.time === null">live</span>
    </div>
    <div class="r-teamA">
      <span v-text="match.teamA.title"></span>
      <img :src="match.teamA.logo"/>
    </div>
    <div class="r-scores" :class="match.teamA.score !== null || match.teamB.score !== null ? 'bold' : ''">
      <label>vs</label>
    </div>
    <div class="r-teamB">
      <img :src="match.teamB.logo"/>
      <span v-text="match.teamB.title"></span>
    </div>
    <div>
      <label v-text="match.event.name ? match.event.name.slice(0, 18) + (match.event.name.length > 18 ? '...' : '') : 'Матч вне соревнований'"></label>
      <span v-if="match.event.image" class="img">
          <img :src="match.event.image" />
        </span>
    </div>
  </div>
</script>

<script type="text/x-template" id="empty-match-template">
  <div class="rows">
    <div>
      <label v-if="match.time !== null" v-text="match.time"></label>
      <span v-if="match.time === null">live</span>
    </div>
    <div class="r-teamA">
    </div>
    <div class="r-scores">
    </div>
    <div class="w-100">
      <label v-text="match.event.name ? match.event.name : 'Матч вне соревнований'" class="w-100"></label>
      <span v-if="match.event.image" class="img">
          <img :src="match.event.image" />
        </span>
    </div>
  </div>
</script>

<script>
  const match = Vue.component('match',{
    props: ['match'],
    template: '#match-template'
  })

  const emptyMatch = Vue.component('empty-match', {
    props: ['match'],
    template: '#empty-match-template'
  })

  const matches = new Vue({
    el: '#matches',
    components: {
      'match': match,
      'empty-match': emptyMatch
    },
    computed: {
      getItems() {
        return this.data[this.page] ? this.data[this.page].items : '';
      },
      getDateItems() {
        return this.data[this.page] ? this.data[this.page].date : '';
      },
    },
    methods: {
      setView(index, e) {
        this.height = index === this.index ? 0 : e.target.closest('.table-row').querySelector('.video').querySelector('.rows-d').offsetHeight + 'px';
        this.index = index === this.index ? null : index;
      },
      prevItems() {
        if (this.page > 0) {
          this.page = this.page - 1;
        }
      },
      nextItems() {
        if (this.page < (this.data.length > 0 && this.data.length - 1)) {
          this.page = this.page + 1;
        }
      },
      checkEmptyTeam(match) {
        let result = true;

        if (match.teamA === null)
          result = false
        if (match.teamB === null)
          result = false

        return result
      }
    },
    data: function () {
      return {
        height: '200px',
        index: null,
        page: 0,
        data: [],
      };
    },
    mounted() {
      let parse = JSON.parse('{{ matches|json_encode|raw }}');
      if (Object.keys(parse).length > 0) {
        const today = new Date();
        const datePrevOne = new Date(today.getTime() - (3600 * 24 * 1000));
        const dateNextOne = new Date(today.getTime() + (3600 * 24 * 1000));
        const dateNextTwo = new Date(today.getTime() + (3600 * 48 * 1000));

        Object.keys(parse).forEach((item, i) => {
          const itemNew = parse[item];
          if (datePrevOne.getDate() === Number(item)) {
            itemNew.date = 'Вчера';
          }
          if (today.getDate() === Number(item)) {
            itemNew.date = 'Сегодня';
          }
          if (dateNextOne.getDate() === Number(item)) {
            itemNew.date = 'Завтра';
          }
          if (dateNextTwo.getDate() === Number(item)) {
            itemNew.date = 'Послезавтра';
          }
          if (parse[item].items.length > 8) {
            for (let i = 0; i < Math.round(parse[item].items.length / 9); i++) {
              const newItem = {
                date: parse[item].date,
                items: [],
              };
              for (let i2 = i * 9; i2 < ((i + 1) * 9); i2++) {
                if (parse[item].items[i2]) {
                  newItem.items.push(parse[item].items[i2]);
                }
              }
              this.data.push(newItem);
            }
          } else {
            this.data.push(itemNew);
          }
        });
        this.data.forEach((item, i) => {
          if (item.date === 'Сегодня') {
            if (this.page === 0) {
              this.page = i;
            }
          }
        })
      }
      parse = '';
    }
  });
</script>
