{% extends 'base.html.twig' %}
{% block title %}{{ item.title }}{% endblock %}
{% block router %}{{ item.title }}{% endblock %}
{% block description %}
    <meta name="description" content="{{ item.title }}">
{% endblock %}
{% block css %}
    <link type="text/css" rel="stylesheet" href="/assets/styles/news-comments.css"/>
{% endblock %}
{% block keywords %}
    <meta name="Keywords" content="Игровые матчи, Игровые новости, События, Видео, Интервью">
{% endblock %}
{% block body %}
    <h1 style="opacity: 0; position: absolute; left: 0; top: 0">
        {{ item.title }}
    </h1>
    <div class="news__view" id="news__view">
        <div class="container news-cont">
            <div class="row">
                <div class="col-xl-9 col-lg-9 col-md-9 col-sm-12">
                    <div class="prev_article">
                        <img src="/images/arrowLftDark.svg" alt="arrowLeft"/>
                        <a href="{{ path('news_index') }}">Назад</a>
                    </div>
                    <div class="title_article">
                        <div>
                            {{ item.title }}
                        </div>
                    </div>
                    <div class="author_article">
                        <a href="{{ item.link }}" target="_blank">{{ item.link_name }}</a>
                        {% set month = ['Января','Февраля','Марта','Апреля','Мая','Июня','Июля','Августа','Сентября','Октября','Ноября','Декабря'] %}
                        {% set setMonth = month[item.unix|date('n') - 1] %}
                        <div>{{ item.unix|date('d') }} {{ setMonth }} {{ item.unix|date('Y') }}</div>
                    </div>
                    <div class="text_article">
                        {{ item.text|raw }}
                    </div>
                    <div class="comments">
                        <div class="component order w-100" id="review">
                            <div class="header">
                                <div class="round">
                                    <div><img src="/images/lamp.svg" alt="lamp"/></div>
                                </div>
                                <div class="title">
                                    Коментарии
                                </div>
                            </div>
                            <div class="table" v-for="comment in comments">
                                <div class="comment pl-3 pr-3">
                                    <div class="img">
                                        <img :src="comment.user.photo"></div>
                                    <div class="data">
                                        <div class="title__block">
                                            <div class="title">
                                                <div></div>
                                                <div class="d-flex justify-content-between">
                                                    <span v-html="comment.user.name"></span>
                                                    <span v-html="comment.createdAt"></span>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="mt-2" v-html="comment.comment"></div>
                                    </div>
                                </div>
                            </div>
                            {% if app.user is not null %}
                            <div class="table">
                                <div class="row__name p-3">
                                    <div class="input">
                                        <textarea
                                                v-model="comment"
                                                class="w-100 h-50"
                                                placeholder="Оставте коментарий"
                                                maxlength="100"
                                                rows="6"></textarea>
                                    </div>
                                    <div class="send mt-2">
                                        <div @click="addComment"
                                             class="button-send text-light p-2 pl-5 pr-5 d-inline text-center pointer">
                                            Отправить
                                        </div>
                                    </div>
                                </div>
                            </div>
                            {% endif %}
                        </div>
                    </div>
                </div>
                <div class="col-xl-3 col-lg-3 col-md-3 col-sm-12">
                    {% include 'templates/news/today.html.twig' %}
                </div>
            </div>
        </div>
        <transition name="fade">
            <div class="wrapper news-wrap" v-if="zoom" @click="clearImg">
                <img :src="img" class="temp_clone" style="opacity: 0" alt="clone"/>
                <img :src="img" :style="{width: pos.w, height: pos.h, left: pos.l, top: pos.t}" class="clone"
                     v-show="img !== null" :alt="img"/>
                <div class="title_wrap">Кликните на области чтобы закрыть изображение</div>
            </div>
        </transition>
    </div>

    <script>
        const newsView = new Vue({
            el: '#news__view',
            data: function () {
                return {
                    newsId: '{{ newsId }}',
                    img: null,
                    pos: {w: 0, h: 0, l: 0, t: 0},
                    tmp: null,
                    zoom: false,
                    block: false,
                    comment: null,
                    comments: [],
                };
            },
            methods: {
                clearImg() {
                    document.querySelector('html, body').style.overflow = 'auto';
                    if (!this.block) {
                        this.pos = this.tmp;
                        this.block = true;
                        setTimeout(() => {
                            this.tmp = null;
                            this.img = null;
                            this.block = false;
                            this.zoom = false;
                        }, 500);
                    }
                },
                getComments(){
                    axios.post('{{ url('news.get.comments', { newsId: newsId }) }}')
                        .then(({data}) => {
                            this.comments = data;
                        })
                },
                addComment() {
                    const data = {
                        id: this.newsId,
                        comment: this.comment
                    };
                    axios.post('{{ url('news.add.comment') }}', data)
                        .then(() => {
                            this.comment = null;
                            this.getComments();
                        })
                }
            },
            mounted() {
                this.getComments();

                document.querySelector('.text_article').querySelectorAll('img').forEach((item) => {
                    item.addEventListener('click', (e) => {
                        document.querySelector('html, body').style.overflow = 'hidden';
                        if (!this.block) {
                            this.zoom = true;
                            this.block = true;
                            this.img = e.target.getAttribute('src');
                            const pos = e.target.getBoundingClientRect();
                            this.pos = {
                                w: pos.width + 'px',
                                h: pos.height + 'px',
                                l: pos.left + 'px',
                                t: pos.top + 'px',
                            };
                            this.tmp = this.pos;
                            setTimeout(() => {
                                let h = document.querySelector('.temp_clone').clientHeight;
                                let t = 0;
                                let w = document.querySelector('.temp_clone').clientWidth;
                                let l = (window.innerWidth - w) / 2;
                                if (window.innerHeight > window.innerWidth) {
                                    const w_t = window.innerWidth / w;
                                    const h_t = window.innerWidth / h;
                                    const ratio = Math.min(w_t, h_t);
                                    w = Math.ceil(w * ratio);
                                    h = Math.ceil(h * ratio);
                                    l = 0;
                                    t = (window.innerHeight - h) / 2;
                                } else {
                                    if (w > h) {
                                        if (w > window.innerWidth) {
                                            const w_t = window.innerWidth / w;
                                            const h_t = window.innerWidth / h;
                                            const ratio = Math.min(w_t, h_t);
                                            w = Math.ceil(w * ratio);
                                            h = Math.ceil(h * ratio);
                                            l = 0;
                                        } else {
                                            const w_t = w / w;
                                            const h_t = w / h;
                                            const ratio = Math.min(w_t, h_t);
                                            w = Math.ceil(w * ratio);
                                            h = Math.ceil(h * ratio);
                                        }
                                        t = (window.innerHeight - h) / 2;
                                    } else {
                                        if (h > window.innerHeight) {
                                            const w_t = window.innerHeight / w;
                                            const h_t = window.innerHeight / h;
                                            const ratio = Math.min(w_t, h_t);
                                            w = Math.ceil(w * ratio);
                                            h = Math.ceil(h * ratio);
                                            l = (window.innerWidth - w) / 2;
                                            t = 0;
                                        } else {
                                            const w_t = h / w;
                                            const h_t = h / h;
                                            const ratio = Math.min(w_t, h_t);
                                            w = Math.ceil(w * ratio);
                                            h = Math.ceil(h * ratio);
                                            l = (window.innerWidth - w) / 2;
                                            t = (window.innerHeight - h) / 2;
                                        }
                                    }
                                }
                                this.pos = {
                                    w: w + 'px',
                                    h: h + 'px',
                                    l: l + 'px',
                                    t: t + 'px',
                                };
                                this.block = false;
                            }, 50);
                        }
                    });
                });
            },
        });
    </script>
{% endblock %}
